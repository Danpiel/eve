= eve

* http://github.com/sinisterchipmunk/eve

== DESCRIPTION:

FIX (describe your package)

== FEATURES/PROBLEMS:

Still in development. Maybe, what, 65% done?

== SYNOPSIS:

See the RDoc documentation for a detailed listing of all APIs and their arguments.

  require 'rubygems'
  require 'eve'
  #
  # Get the current server status
  api = Eve::API.new()
  server_status = api.server_status
  puts "Server reports status #{server_status.server_open ? "ONLINE" : "OFFLINE"}"
  puts "\tCurrent time is #{server_status.current_time}"
  puts "\t#{server_status.online_players} players currently online"
  puts
  #
  # Get a list of characters
  api = Eve::API.new(:user_id => $user_id, :api_key => $limited_api_key)
  result = api.account.characters
  puts "Choose a character:"
  result.characters.each_with_index { |char, index| puts "\t#{index}: #{char.name} (#{char.character_id})" }
  choice = gets.chomp.to_i
  puts
  #
  # Get a character sheet
  api.set(:api_key => $full_api_key, :character_id => result.characters[choice].character_id)
  character_sheet = api.character.character_sheet
  puts "#{character_sheet.name}:"
  print "\tCharisma:    \t #{character_sheet.attributes.charisma}    \n"
  print "\tIntelligence:\t #{character_sheet.attributes.intelligence}\n"
  print "\tMemory:      \t #{character_sheet.attributes.memory}      \n"
  print "\tPerception:  \t #{character_sheet.attributes.perception}  \n"
  print "\tWillpower:   \t #{character_sheet.attributes.willpower}   \n"
  puts
  #
  # Get the current training queue
  result = api.character.skill_queue
  result.skillqueue.each do |skill|
    result.skillqueue.columns.each do |column|
      print column, ":\t\t", skill[column], "\n"
    end
    puts
  end


== REQUIREMENTS:

  hpricot
  activesupport

== INSTALL:

  sudo gem install eve

== LICENSE:

(The MIT License)

Copyright (c) 2010 Colin MacKenzie IV

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.